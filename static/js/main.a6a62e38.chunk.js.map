{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","titleError","imgUrlError","imdbUrlError","imdbIdError","handleSubmit","event","preventDefault","film","props","onAdd","reset","setState","onSubmit","this","type","name","value","placeholder","onChange","target","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a6a62e38.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\ntype State = {\n  title: string,\n  titleError: boolean,\n  description: string,\n  imgUrl: string,\n  imgUrlError: boolean,\n  imdbUrl: string,\n  imdbUrlError: boolean,\n  imdbId: string,\n  imdbIdError: boolean,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    titleError: false,\n    description: '',\n    imgUrl: '',\n    imgUrlError: false,\n    imdbUrl: '',\n    imdbUrlError: false,\n    imdbId: '',\n    imdbIdError: false,\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!this.state.title) {\n      this.state.titleError = true;\n    }\n\n    if (!this.state.imgUrl) {\n      this.state.imgUrlError = true;\n    }\n\n    if (!this.state.imdbUrl) {\n      this.state.imdbUrlError = true;\n    }\n\n    if (!this.state.imdbId) {\n      this.state.imdbIdError = true;\n    }\n\n    if (this.state.title) {\n      const film = {\n        title: this.state.title,\n        description: this.state.description,\n        imgUrl: this.state.imgUrl,\n        imdbUrl: this.state.imdbUrl,\n        imdbId: this.state.imdbId,\n      };\n\n      this.props.onAdd(film);\n    }\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <h2 className=\"form-name\">Add a movie</h2>\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={this.state.title}\n          className=\"form-title form-input\"\n          placeholder=\"Title\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            this.setState({\n              title: event.target.value,\n              titleError: false,\n            });\n          }}\n        />\n\n        {this.state.titleError && (\n          <div className=\"error\">\n            Please enter a title\n          </div>\n        )}\n\n        <input\n          type=\"text\"\n          name=\"description\"\n          value={this.state.description}\n          className=\"form-description form-input\"\n          placeholder=\"Description\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            this.setState({\n              description: event.target.value,\n            });\n          }}\n        />\n\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          value={this.state.imgUrl}\n          className=\"form-imgUrl form-input\"\n          placeholder=\"ImgUrl\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            this.setState({\n              imgUrl: event.target.value,\n              imgUrlError: false,\n            });\n          }}\n        />\n\n        {this.state.imgUrlError && (\n          <div className=\"error\">\n            Please enter a value\n          </div>\n        )}\n\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          value={this.state.imdbUrl}\n          className=\"form-imdbUrl form-input\"\n          placeholder=\"ImdbUrl\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            this.setState({\n              imdbUrl: event.target.value,\n              imdbUrlError: false,\n            });\n          }}\n        />\n\n        {this.state.imdbUrlError && (\n          <div className=\"error\">\n            Please enter a value\n          </div>\n        )}\n\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          value={this.state.imdbId}\n          className=\"form-imdbId form-input\"\n          placeholder=\"ImdbId\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            this.setState({\n              imdbId: event.target.value,\n              imdbIdError: false,\n            });\n          }}\n        />\n\n        {this.state.imdbIdError && (\n          <div className=\"error\">\n            Please enter a value\n          </div>\n        )}\n\n        <button type=\"submit\" className=\"form-button\">\n          Add a movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}